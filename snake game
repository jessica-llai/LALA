


import turtle
import time
import random

delay = 0.1

# set up the screen

wn = turtle.Screen()
wn.title(' Snake Game by @Jessica Lai')
wn.bgcolor('white')
wn.setup(width=600, height=600)
wn.tracer(0)  # this turns off the screen updates, thus i put while function in the line 25 to update


# create snake head

head = turtle.Turtle()
head.speed(0)
head.shape('square')
head.color('pink')
head.penup()
head.goto(0, 0)
head.direction = 'stop'


# create snake food

food = turtle.Turtle()
food.speed(0)
food.shape('circle')
food.color('orange')
food.penup()
food.goto(0, 100)

segments = []

# Functions to make snake move

def go_up():
    head.direction = 'up'

def go_down():
    head.direction = 'down'

def go_left():
    head.direction = 'left'

def go_right():
    head.direction = 'right'

def move():
    if head.direction == 'up':
        y = head.ycor()
        head.sety(y + 20)
    if head.direction == 'down':
        y = head.ycor()
        head.sety(y - 20)
    if head.direction == 'left':
        x = head.xcor()
        head.sety(x - 20)
    if head.direction == 'right':
        x = head.xcor()
        head.sety(x + 20)


# keyboard bindings
wn.listen()
wn.onkeypress(go_up, 'w')
wn.onkeypress(go_down, 's')
wn.onkeypress(go_left, 'a')
wn.onkeypress(go_right, 'd')


# main game loop
while True:
    wn.update()

    # check for the collusion with the fodd
    if head.distance(food) < 20:
        x = random.randint(-290, 290) # go up to import the random model first
        y = random.randint(-290, 290)
        food.goto(x,y)
        # add a segment
        new_segment = turtle.Turtle()
        new_segment.speed(0)
        new_segment.shape('square')
        new_segment.color('yellow')
        new_segment.penup()
        segments.append(new_segment)


    for index in range(len(segments)-1,0,1):
        x = segments[index -1].xcor()
        y = segments [index -1].ycor()
        segments[index].goto(x,y)

    if len(segments) > 0:
        x = head.xcor()
        y = head.ycor()
        segments[0].goto(x,y)



    move()

    time.sleep(delay)



# this is the end
wn.mainloop()


